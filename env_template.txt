import 'package:dotenv/dotenv.dart';

class EnvConfig {
  static final EnvConfig _instance = EnvConfig._internal();
  factory EnvConfig() => _instance;
  EnvConfig._internal();

  late DotEnv _env;
  bool _isInitialized = false;

  /// 환경 변수 초기화
  Future<void> initialize() async {
    if (_isInitialized) return;
    
    _env = DotEnv(includePlatformEnvironment: true);
    _env.load(['.env']);
    _isInitialized = true;
  }

  /// API 키 가져오기
  String get openaiApiKey => _env['OPENAI_API_KEY'] ?? '';
  String get anthropicApiKey => _env['ANTHROPIC_API_KEY'] ?? '';
  String get googleApiKey => _env['GOOGLE_API_KEY'] ?? '';
  String get dartApiKey => _env['DART_API_KEY'] ?? '';
  
  /// 기타 설정
  String get apiBaseUrl => _env['API_BASE_URL'] ?? 'https://api.example.com';
  String get dartApiBaseUrl => _env['DART_API_BASE_URL'] ?? 'https://opendart.fss.or.kr/api';
  bool get debugMode => _env['DEBUG_MODE'] == 'true';

  /// 환경 변수가 제대로 로드되었는지 확인
  bool get isInitialized => _isInitialized;
  
  /// 모든 환경 변수 출력 (디버깅용)
  void printAllEnvVars() {
    if (!_isInitialized) {
      print('환경 변수가 초기화되지 않았습니다.');
      return;
    }
    
    print('=== 환경 변수 목록 ===');
    print('OPENAI_API_KEY: ${openaiApiKey.isNotEmpty ? "설정됨" : "설정되지 않음"}');
    print('ANTHROPIC_API_KEY: ${anthropicApiKey.isNotEmpty ? "설정됨" : "설정되지 않음"}');
    print('GOOGLE_API_KEY: ${googleApiKey.isNotEmpty ? "설정됨" : "설정되지 않음"}');
    print('DART_API_KEY: ${dartApiKey.isNotEmpty ? "설정됨" : "설정되지 않음"}');
    print('API_BASE_URL: $apiBaseUrl');
    print('DART_API_BASE_URL: $dartApiBaseUrl');
    print('DEBUG_MODE: $debugMode');
  }
}
